AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a Systems Manager Command Document for managing Amazon CloudWatch Agent.

Parameters:
  DocumentName:
    Type: String
    Default: Mod-AmazonCloudWatch-ManageAgent
    Description: The name of the Systems Manager Command Document.

Resources:
  CloudWatchAgentCommandDocument:
    Type: AWS::SSM::Document
    Properties:
      Name: !Ref DocumentName
      DocumentType: Command
      UpdateMethod: NewVersion
      TargetType: "/AWS::EC2::Instance"
      Content:
        schemaVersion: "2.2"
        description: "Send commands to Amazon CloudWatch Agent, with ECCOM Mod"
        parameters:
          action:
            description: "The action CloudWatch Agent should take."
            type: "String"
            default: "configure"
            allowedValues:
              - "configure"
              - "configure (append)"
              - "configure (remove)"
              - "start"
              - "status"
              - "stop"
          mode:
            description: "Controls platform-specific default behavior such as whether to include EC2 Metadata in metrics."
            type: "String"
            default: "ec2"
            allowedValues:
              - "ec2"
              - "onPremise"
              - "auto"
          optionalConfigurationSource:
            description: "Only for 'configure' related actions. Use 'ssm' to apply a ssm parameter as config. Use 'default' to apply default config for amazon-cloudwatch-agent. Use 'all' with 'configure (remove)' to clean all configs for amazon-cloudwatch-agent."
            type: "String"
            allowedValues:
              - "ssm"
              - "default"
              - "all"
            default: "ssm"
          optionalConfigurationLocation:
            description: "Only for 'configure' related actions. Only needed when Optional Configuration Source is set to 'ssm'. The value should be a ssm parameter name."
            type: "String"
            default: ""
            allowedPattern: "[a-zA-Z0-9-\"~:_@./^(*)!<>?=+]*$"
          optionalRestart:
            description: "Only for 'configure' related actions. If 'yes', restarts the agent to use the new configuration. Otherwise the new config will only apply on the next agent restart."
            type: "String"
            default: "yes"
            allowedValues:
              - "yes"
              - "no"
        mainSteps:
          - name: "ControlCloudWatchAgentWindows"
            action: "aws:runPowerShellScript"
            precondition:
              StringEquals:
                - "platformType"
                - "Windows"
            inputs:
              runCommand:
                - " Set-StrictMode -Version 2.0"
                - " $ErrorActionPreference = 'Stop'"
                - " $Cmd = \"${Env:ProgramFiles}\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1\""
                - " if (!(Test-Path -LiteralPath \"${Cmd}\")) {"
                - "     Write-Output 'CloudWatch Agent not installed.  Please install it using the AWS-ConfigureAWSPackage SSM Document.'"
                - "     exit 1"
                - " }"
                - " $Params = @()"
                - " $Action = '{{action}}'"
                - " if ($Action -eq 'configure') {"
                - "     $Action = 'fetch-config'"
                - " } elseif ($Action -eq 'configure (append)') {"
                - "     $Action = 'append-config'"
                - " } elseif ($Action -eq 'configure (remove)') {"
                - "     $Action = 'remove-config'"
                - " }"
                - " if ($Action -eq 'fetch-config' -Or $Action -eq 'append-config' -Or $Action -eq 'remove-config') {"
                - "     $CWAConfig = '{{optionalConfigurationLocation}}'"
                - "     if ('{{optionalConfigurationSource}}' -eq 'ssm') {"
                - "         if ($CWAConfig) {"
                - "             $CWAConfig = \"ssm:${CWAConfig}\""
                - "         }"
                - "     } else {"
                - "         $CWAConfig = '{{optionalConfigurationSource}}'"
                - "     }"
                - "     if (!$CWAConfig) {"
                - "         Write-Output 'AmazonCloudWatchAgent config should be specified'"
                - "         exit 1"
                - "     }"
                - "     if ($CWAConfig -eq 'all' -And $Action -ne 'remove-config') {"
                - "         Write-Output 'Configuration location \"all\" can only be applied with action \"remove-config\"'"
                - "         exit 1"
                - "     }"
                - "     $Params += ('-c', \"${CWAConfig}\")"
                - "     if ('{{optionalRestart}}' -eq 'yes') {"
                - "         $Params += '-s'"
                - "     }"
                - " }"
                - " $Params += ('-a', \"${Action}\", '-m', '{{mode}}')"
                - " Invoke-Expression \"& '${Cmd}' ${Params}\""
                - " Set-StrictMode -Off"
                - " exit $LASTEXITCODE"
          - name: "ControlCloudWatchAgentLinux"
            action: "aws:runShellScript"
            precondition:
              StringEquals:
                - "platformType"
                - "Linux"
            inputs:
              runCommand:
                - "#!/bin/sh"
                - "set -e"
                - "set -u"
                - ""
                - "ctl='/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl'"
                - "config_downloader='/opt/aws/amazon-cloudwatch-agent/bin/config-downloader'"
                - "temp_config_dir='/tmp/cloudwatch-agent-config'"
                - "temp_config_file=\"${temp_config_dir}/ssm_AmazonCloudWatch-linux.tmp\""
                - ""
                - "if [ ! -x \"${ctl}\" ]; then"
                - "    echo 'CloudWatch Agent not installed. Please install it using the AWS-ConfigureAWSPackage SSM Document.'"
                - "    exit 1"
                - "fi"
                - ""
                - "if [ ! -x \"${config_downloader}\" ]; then"
                - "    echo 'Config Downloader not found. Please ensure CloudWatch Agent is properly installed.'"
                - "    exit 1"
                - "fi"
                - ""
                - "action=\"{{action}}\""
                - ""
                - "if [ \"${action}\" = 'configure' ]; then"
                - "    action='fetch-config'"
                - "elif [ \"${action}\" = 'configure (append)' ]; then"
                - "    action='append-config'"
                - "elif [ \"${action}\" = 'configure (remove)' ]; then"
                - "    action='remove-config'"
                - "fi"
                - ""
                - "if [ \"${action}\" = 'fetch-config' ] || [ \"${action}\" = 'append-config' ] || [ \"${action}\" = 'remove-config' ]; then"
                - "    cwaconfig='{{optionalConfigurationLocation}}'"
                - "    if [ '{{optionalConfigurationSource}}' = 'ssm' ]; then"
                - "        if [ -n \"${cwaconfig}\" ]; then"
                - "            cwaconfig=\"ssm:${cwaconfig}\""
                - "        fi"
                - "        if [ -z \"${cwaconfig}\" ]; then"
                - "            echo 'AmazonCloudWatchAgent config should be specified'"
                - "            exit 1"
                - "        fi"
                - ""
                - "        # 使用config-downloader从SSM获取配置并保存到临时目录"
                - "        mkdir -p ${temp_config_dir}"
                - "        ${config_downloader} -download-source ${cwaconfig} -output-dir ${temp_config_dir}"
                - ""
                - "        # 获取所有物理磁盘分区的挂载点"
                - "        mountlist=$(lsblk -o MOUNTPOINT,TYPE -nr | awk '$2 == \"disk\" || $2 == \"part\" {if($1 != \"\") print \"\\\"\" $1 \"\\\"\" }' | tr '\\n' ',' | sed 's/,$//')"
                - ""
                - "        # 检查并修改配置"
                - "        if grep -q 'PARTITIONMOUNTPOINTS' ${temp_config_file}; then"
                - "            sed \"s|\\*\\*PARTITIONMOUNTPOINTS\\*\\*|${mountlist}|g\" \"${temp_config_file}\" > \"${temp_config_dir}/config.json\""
                - "        fi"
                - "        cwaconfig=\"file:${temp_config_dir}/config.json\""
                - "    else"
                - "        cwaconfig='{{optionalConfigurationSource}}'"
                - "    fi"
                - ""
                - "    if [ -z \"${cwaconfig}\" ]; then"
                - "        echo 'AmazonCloudWatchAgent config should be specified'"
                - "        exit 1"
                - "    fi"
                - ""
                - "    cmd=\"${ctl} -c ${cwaconfig}\""
                - "    if [ \"${cwaconfig}\" = 'all' ] && [ \"${action}\" != 'remove-config' ]; then"
                - "        echo 'Configuration location \"all\" can only be applied with action \"remove-config\"'"
                - "        exit 1"
                - "    fi"
                - "    if [ '{{optionalRestart}}' = 'yes' ]; then"
                - "        cmd=\"${cmd} -s\""
                - "    fi"
                - "fi"
                - ""
                - "cmd=\"${cmd} -a ${action} -m {{mode}}\""
                - "${cmd}"
          - name: "ControlCloudWatchAgentMacOS"
            action: "aws:runShellScript"
            precondition:
              StringEquals:
                - "platformType"
                - "MacOS"
            inputs:
              runCommand:
                - " #!/bin/sh"
                - " set -e"
                - " set -u"
                - " cmd='/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl'"
                - " if [ ! -x \"${cmd}\" ]; then"
                - "     echo 'CloudWatch Agent not installed.  Please install it using the AWS-ConfigureAWSPackage SSM Document.'"
                - " exit 1"
                - " fi"
                - " action=\"{{action}}\""
                - " if [ \"${action}\" = 'configure' ]; then"
                - "     action='fetch-config'"
                - " elif [ \"${action}\" = 'configure (append)' ]; then"
                - "     action='append-config'"
                - " elif [ \"${action}\" = 'configure (remove)' ]; then"
                - "     action='remove-config'"
                - " fi"
                - " if [ \"${action}\" = 'fetch-config' ] || [ \"${action}\" = 'append-config' ] || [ \"${action}\" = 'remove-config' ]; then"
                - "     cwaconfig='{{optionalConfigurationLocation}}'"
                - "     if [ '{{optionalConfigurationSource}}' = 'ssm' ]; then"
                - "         if [ -n \"${cwaconfig}\" ]; then"
                - "             cwaconfig=\"ssm:${cwaconfig}\""
                - "         fi"
                - "     else"
                - "         cwaconfig='{{optionalConfigurationSource}}'"
                - "     fi"
                - "     if [ -n \"${cwaconfig}\" ]; then"
                - "         cmd=\"${cmd} -c ${cwaconfig}\""
                - "     fi"
                - "     if [ \"${cwaconfig}\" = 'all' ] && [ \"${action}\" != 'remove-config' ]; then"
                - "         echo 'Configuration location \"all\" can only be applied with action \"remove-config\"'"
                - "         exit 1"
                - "     fi"
                - "     if [ -z \"${cwaconfig}\" ]; then"
                - "         echo 'AmazonCloudWatchAgent config should be specified'"
                - "         exit 1"
                - "     fi"
                - "     if [ '{{optionalRestart}}' = 'yes' ]; then"
                - "         cmd=\"${cmd} -s\""
                - "     fi"
                - " fi"
                - " cmd=\"${cmd} -a ${action} -m {{mode}}\""
                - " ${cmd}"
